generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  username  String?   @unique
  email     String    @unique
  googleId  String?   @unique @map("google_id")
  picture   String?
  roles     String    @default("MEMBER")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  sessions  Session[]

  @@index([username])
  @@index([roles])
  @@index([googleId])
  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([token])
  @@index([userId])
  @@map("sessions")
}

model Category {
  id              Int      @id @default(autoincrement())
  name            String
  subName         String   @map("sub_name")
  code            String?  @unique
  brand           String
  desc            String?  @db.Text
  requestBy       String?  @db.VarChar(200)
  isCheckNickname String   @map("is_check_nickname") @db.VarChar(10)
  status          String   @map("status") @db.VarChar(20)
  bannerUrl       String?  @db.Text
  image           String?  @db.Text
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([status, code])
  @@map("categories")
}

model Service {
  id          Int              @id @default(autoincrement())
  name        String
  categoryId  Int
  logoUrl     String?          @db.Text
  description String?          @db.Text
  status      String?          @db.VarChar(100)
  purchaseBuy Int
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  pricings    ServicePricing[]
}

model CustomerGroup {
  id       Int              @id @default(autoincrement())
  name     String
  discount Int?
  pricings ServicePricing[]
}

model ServicePricing {
  id              Int      @id @default(autoincrement())
  serviceId       Int
  customerGroupId Int
  priceSale       Int
  profit          Int
  isActive        String   @default("active") @db.VarChar(20)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  service       Service       @relation(fields: [serviceId], references: [id])
  customerGroup CustomerGroup @relation(fields: [customerGroupId], references: [id])

  @@unique([serviceId, customerGroupId])
}

model Method {
  id          Int      @id @default(autoincrement())
  name        String
  grubName    String   @map("grub_name")
  image       String    @db.Text
  description String
  minAmount   Int      @map("min_amount")
  maxAmount   Int      @map("max_amount")
  fee         Int?
  status      String   @default("active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
}
