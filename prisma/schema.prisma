generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  username  String?   @unique
  email     String    @unique
  googleId  String?   @unique @map("google_id")
  picture   String?
  roles     String    @default("MEMBER")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  sessions  Session[]

  @@index([username])
  @@index([roles])
  @@index([googleId])
  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([token])
  @@index([userId])
  @@map("sessions")
}

model Category {
  id              Int      @id @default(autoincrement())
  name            String
  subName         String   @map("sub_name")
  code            String?  @unique
  brand           String
  desc            String?  @db.Text
  requestBy       String?  @db.VarChar(200)
  isCheckNickname String   @map("is_check_nickname") @db.VarChar(10)
  status          String   @map("status") @db.VarChar(20)
  bannerUrl       String?  @db.Text
  type      String @db.VarChar(20)
  thumbnail      String?   @db.Text
  instruction      String?   @db.Text
  information      String   @db.Text
  placeholder1   String @db.VarChar(30)  @map("placeholder_1")
  placeholder_2   String  @db.VarChar(30) @map("placeholder_2")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([status, code])
  @@map("categories")
}

model Service {
  id          Int              @id @default(autoincrement())
  name        String
  categoryId  Int       @map("category_id")
  logoUrl     String?          @db.Text @map("logo_url")
  description String?          @db.Text
  status      String?          @db.VarChar(100)
  createdAt   DateTime         @default(now()) @map("created_at")
  updatedAt   DateTime         @updatedAt @map("updated_at")
  pricings    ServicePricing[]
  providerServices ServiceProviderMapping[]

  @@index([categoryId, status])
  @@index([name])
  @@map("services")
}

model ServiceProviderMapping {
  id            Int     @id @default(autoincrement())
  serviceId     Int  @map("service_id")
  providerId    String  @map("provider_id")
  provider      String  
  isActive   String @db.VarChar(10) @map("is_active") @default("active")
  lastSyncAt    DateTime? @map("last_sync_at")
  providerPrice Int? @map("provider_price")
  createdAt   DateTime         @default(now()) @map("created_at")
  updatedAt   DateTime         @updatedAt @map("updated_at")

  service       Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@unique([serviceId, providerId, provider]) 
  @@index([provider, providerId])
  @@index([serviceId])
  @@map("service_provider_mappings")
}



model CustomerGroup {
  id       Int              @id @default(autoincrement())
  name     String
  discount Int?

  @@map("customer_groups")

}

model ServicePricing {
  id              Int      @id @default(autoincrement())
  serviceId       Int   @map("service_id")
  priceUser       Int  @map("price_user")
  priceReseller   Int @map("price_reseller")
  pricePlatinum   Int @map("price_platinum")
  profitUser      Int @map("profit_user")
  profitReseller  Int @map("profit_reseller")
  profitPlatinum  Int @map("profit_platinum")
  isActive        String  @map("is_active") @default("active") @db.VarChar(20)
  createdAt       DateTime @default(now())  @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  service         Service @relation(fields: [serviceId], references: [id])

  @@unique([serviceId])
  @@map("service_pricings")
}

model Method {
  id          Int      @id @default(autoincrement())
  name        String
  grubName    String   @map("grub_name")
  image       String    @db.Text
  description String
  minAmount   Int      @map("min_amount")
  maxAmount   Int      @map("max_amount")
  fee         Int?
  status      String   @default("active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
}



model Transaction {
  id            Int      @id @default(autoincrement())
  orderId       String   @map("order_id")
  nomortujuan   String   @map("nomor_tujuan")  
  purchasePrice Int      @map("purchase_price")
  purchaseSell  Int      @map("purchase_sell")
  profit        Int      @map("profit")
  productCode   String   @map("product_code")
  message       String   @map("message")
  log           String   @map("log")
  sn            String?  @map("serial_number")
  

  status        String   @default("pending") 
  userId        String?  @map("user_id")
  customerName  String?  @map("customer_name")
  customerPhone String?  @map("customer_phone")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  processedAt   DateTime? @map("processed_at") 
  @@map("transactions")
}


model Payment {
  id          Int      @id @default(autoincrement())
  orderId     String   @map("order_id")
  amount      Int
  method      String   
  fee         Int 
  totalAmount Int      @map("total_amount")
  
  status      String   @default("pending")
  userId      String?  @map("user_id")
  reference   String?  
  paymentDate DateTime? @map("payment_date")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("payments")
}


